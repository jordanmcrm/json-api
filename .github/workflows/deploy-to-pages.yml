name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Pages
        uses: actions/configure-pages@v3
      
      - name: Create data directory
        run: mkdir -p public/data
      
      - name: Create JSON data files
        run: |
          # Create items.json with sample data
          cat > public/data/items.json << 'EOL'
          [
            {
              "_id": "1",
              "name": "Item 1",
              "description": "First item description",
              "price": 10.99
            },
            {
              "_id": "2",
              "name": "Item 2",
              "description": "Second item description",
              "price": 20.49
            },
            {
              "_id": "3",
              "name": "Item 3",
              "description": "Third item description",
              "price": 15.75
            }
          ]
          EOL
          
          # Create users.json with sample data
          cat > public/data/users.json << 'EOL'
          [
            {
              "_id": "1",
              "username": "user1",
              "email": "user1@example.com",
              "role": "admin"
            },
            {
              "_id": "2",
              "username": "user2",
              "email": "user2@example.com",
              "role": "user"
            }
          ]
          EOL
      
      - name: Create frontend files
        run: |
          # Create HTML file
          cat > public/index.html << 'EOL'
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>Static JSON API Demo</title>
              <style>
                  body { font-family: Arial, sans-serif; max-width: 800px; margin: 0 auto; padding: 20px; }
                  h1, h2 { color: #333; }
                  pre { background-color: #f5f5f5; padding: 15px; border-radius: 5px; overflow-x: auto; }
                  .endpoint { border: 1px solid #ddd; padding: 15px; margin-bottom: 20px; border-radius: 5px; }
                  .url { font-family: monospace; background-color: #e9e9e9; padding: 5px; }
              </style>
          </head>
          <body>
              <h1>Static JSON API</h1>
              <p>This is a simple static JSON API hosted on GitHub Pages. You can use the following endpoints in your mobile app:</p>
              
              <div class="endpoint">
                  <h2>Get All Items</h2>
                  <p>URL: <span class="url">/data/items.json</span></p>
                  <p>Method: GET</p>
                  <p>Sample Response:</p>
                  <pre id="items-response">Loading...</pre>
              </div>
              
              <div class="endpoint">
                  <h2>Get All Users</h2>
                  <p>URL: <span class="url">/data/users.json</span></p>
                  <p>Method: GET</p>
                  <p>Sample Response:</p>
                  <pre id="users-response">Loading...</pre>
              </div>
              
              <h2>How to Use in Your Mobile App</h2>
              <p>Replace <code>YOUR_USERNAME</code> with your GitHub username and <code>YOUR_REPO</code> with your repository name:</p>
              <pre>
          // Example fetch in JavaScript
          fetch('https://YOUR_USERNAME.github.io/YOUR_REPO/data/items.json')
            .then(response => response.json())
            .then(data => console.log(data))
            .catch(error => console.error('Error:', error));
              </pre>
              
              <script>
                  // Load and display sample responses
                  async function loadSampleResponses() {
                      try {
                          const itemsResponse = await fetch('./data/items.json');
                          const itemsData = await itemsResponse.json();
                          document.getElementById('items-response').textContent = JSON.stringify(itemsData, null, 2);
                          
                          const usersResponse = await fetch('./data/users.json');
                          const usersData = await usersResponse.json();
                          document.getElementById('users-response').textContent = JSON.stringify(usersData, null, 2);
                      } catch (error) {
                          console.error('Error loading sample responses:', error);
                      }
                  }
                  
                  window.onload = loadSampleResponses;
              </script>
          </body>
          </html>
          EOL
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: 'public'
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2 
